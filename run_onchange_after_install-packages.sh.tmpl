#!/bin/sh

# Function to check if a package is installed
is_installed() {
  pacman -Q "$1" > /dev/null 2>&1
}

# Function to check if a package is available in chaotic-aur
is_in_chaotic_aur() {
  echo "$chaotic_aur_list" | grep -q " $1 "
}

# Check if we can modify the pacman keyring
if sudo pacman-key --init > /dev/null 2>&1; then
  echo "Have necessary permissions to modify pacman keyring."

  # Check if /etc/pacman.d/chaotic-mirrorlist exists
  if [ ! -f /etc/pacman.d/chaotic-mirrorlist ]; then
    echo "chaotic-mirrorlist not found, proceeding to install chaotic-aur keyring and mirrorlist."

    # Import the chaotic-aur signing key
    sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
    sudo pacman-key --lsign-key 3056513887B78AEB

    # Install the chaotic-aur keyring and mirrorlist
    sudo pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
    sudo pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
  else
    echo "chaotic-mirrorlist already exists."
  fi

  # Add the chaotic-aur repository to /etc/pacman.conf if not already added
  if [ -f /etc/pacman.d/chaotic-mirrorlist ] && ! grep -q "\[chaotic-aur\]" /etc/pacman.conf; then
    sudo sh -c 'printf "\n[chaotic-aur]\nInclude = /etc/pacman.d/chaotic-mirrorlist\n" >> /etc/pacman.conf'
  fi

  # Check if yay is installed and install it if not
  if ! pacman -Qi yay > /dev/null 2>&1; then
    echo "yay is not installed. Installing yay from chaotic-aur."
    sudo pacman -Syu --noconfirm chaotic-aur/yay
  else
    echo "yay is already installed."
  fi
else
  echo "Insufficient permissions to modify pacman keyring. Skipping chaotic-aur setup."
fi

# Update the package database
sudo pacman -Sy

# Save the list of chaotic-aur packages in a variable
chaotic_aur_list=$(yay -Sl chaotic-aur)

# List of packages to check and install if necessary
PACKAGE_LIST="
ark
bat
btop
ctpv
dash
dashbinsh
deadbeef
deadbeef-mpris2-plugin
deemix-git
discord
emote
en_se
espanso-x11-bin
exfat-utils
eza
fastfetch
fd
ffmpegthumbnailer
ffmpegthumbs
flacon
flameshot
fsearch-git
fzf
fzf-tab-git
ghostty
gnome-disk-utility
jq
kdeconnect
kernel-install-mkinitcpio
keyd
kwalletmanager
kwin-effects-forceblur
less
lf-git
librewolf
logiops-git
magic-wormhole
mpv
mpv-thumbfast-git
mpv-uosc
mullvad-vpn
neovim
nomacs
noto-fonts-cjk
noto-fonts-extra
obsidian
ocenaudio-bin
okular
paccache-hook
procs
puddletag
qt6-imageformats
ripgrep
rsgain-git
shellcheck-bin
signal-desktop
soundconverter
sox
speedcrunch
sshfs
syncthing
tdrop
tealdeer
thunderbird
tmux
transmission-remote-gtk
trash-cli-git
ttf-bitstream-vera
ttf-dejavu
ttf-jetbrains-mono-nerd
ttf-liberation
ttf-ms-win11-auto
ttf-opensans
ufw
ufw-extras
unrar
unzip
ventoy-bin
vscodium
vscodium-features
vscodium-marketplace
wmctrl
xclip
yt-dlp
zapzap
zoxide
zsh
zsh-abbr
zsh-autosuggestions
zsh-history-substring-search
zsh-syntax-highlighting
zsh-theme-powerlevel10k-git
"

# Iterate over each package in the list and install if not already installed
echo "$PACKAGE_LIST" | while IFS= read -r package_name; do
  # Skip empty lines
  if [ -n "$package_name" ]; then
    if is_installed "$package_name"; then
      echo "$package_name âœ”"
    else
      if is_in_chaotic_aur "$package_name"; then
        echo "Installing $package_name from chaotic-aur ..."
        yay -S --noconfirm "chaotic-aur/$package_name"
      else
        echo "Installing $package_name ..."
        yay -S --noconfirm "$package_name"
      fi
    fi
  fi
done

# Define the file path to the chezmoi configuration file
chezmoi_config="$HOME/.config/chezmoi/chezmoi.toml"

# Define the git settings to be added
chezmoi_git_settings='
[git]
    autoCommit = true
    autoPush = true
    commitMessageTemplate = "Update"
'

# Check if the git settings already exist in the chezmoi configuration file
if ! grep -q '\[git\]' "$chezmoi_config"; then
  # If the settings do not exist, append them to the configuration file
  printf "%s\n" "$chezmoi_git_settings" >> "$chezmoi_config"
fi

# Change chezmoi remote URL from HTTPS to SSH
chezmoi git remote set-url origin git@github.com:mndscp/dotfiles.git

# Symlink keyd config
sudo ln -s /home/z/.config/keyd/default.conf /etc/keyd/default.conf

# Symlink logiops config
sudo ln -s /home/z/.config/logid/logid.cfg /etc/logid.cfg
