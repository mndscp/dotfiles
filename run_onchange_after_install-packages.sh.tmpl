#!/bin/sh

# Function to check if a package is installed
is_installed() {
  pacman -Q "$1" > /dev/null 2>&1
}

# Function to check if a package is available in chaotic-aur
is_in_chaotic_aur() {
  yay -Sl chaotic-aur | grep -q " $1 "
}

# Check if we can modify the pacman keyring
if sudo pacman-key --init > /dev/null 2>&1; then
  echo "Have necessary permissions to modify pacman keyring."

  # Check if /etc/pacman.d/chaotic-mirrorlist exists
  if [ ! -f /etc/pacman.d/chaotic-mirrorlist ]; then
    echo "chaotic-mirrorlist not found, proceeding to install chaotic-aur keyring and mirrorlist."

    # Import the chaotic-aur signing key
    sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
    sudo pacman-key --lsign-key 3056513887B78AEB

    # Install the chaotic-aur keyring and mirrorlist
    sudo pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
    sudo pacman -U --noconfirm 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
  else
    echo "chaotic-mirrorlist already exists."
  fi

  # Add the chaotic-aur repository to /etc/pacman.conf if not already added
  if [ -f /etc/pacman.d/chaotic-mirrorlist ] && ! grep -q "\[chaotic-aur\]" /etc/pacman.conf; then
    sudo sh -c 'printf "\n[chaotic-aur]\nInclude = /etc/pacman.d/chaotic-mirrorlist\n" >> /etc/pacman.conf'
  fi
else
  echo "Insufficient permissions to modify pacman keyring. Skipping chaotic-aur setup."
fi

# Update the package database
sudo pacman -Sy

# List of packages to check and install if necessary
PACKAGE_LIST="
alacritty
bat
composer
dash
dashbinsh
deadbeef
deadbeef-mpris2-plugin
emote
espanso-bin
eza
fastfetch
fd
ffmpegthumbnailer
ffmpegthumbs
figlet
flameshot
fzf
fzf-tab-bin-git
gnome-disk-utility
gotop-bin
gufw
ibus-hangul
kdeconnect
keyd
lf-bin
lib32-ncurses
magic-wormhole
mpv
mpv-thumbfast-git
mpv-uosc
neovim
nomacs
nvm
okular
peek
pistol-git
procs
ripgrep
shellcheck-bin
solaar
speedcrunch
tdrop
tealdeer
tmux
trashy
ttf-jetbrains-mono-nerd
unrar
unzip
ventoy-bin
vscodium-bin
vscodium-bin-features
vscodium-bin-marketplace
wmctrl
zoxide
zsh
zsh-theme-powerlevel10k

{{ if eq .chezmoi.hostname "ndvr" }}
discord
flacon
fsearch-git
librewolf-bin
mullvad-vpn-bin
obsidian-bin
puddletag-git
rsgain
signal-desktop
soundconverter
sox
syncthing
thunderbird
transmission-remote-gtk
whatsdesk-bin
yt-dlp
{{ end }}
"

# Iterate over each package in the list and install if not already installed
echo "$PACKAGE_LIST" | while IFS= read -r package_name; do
  # Skip empty lines
  if [ -n "$package_name" ]; then
    if is_installed "$package_name"; then
      echo "$package_name âœ”"
    else
      if is_in_chaotic_aur "$package_name"; then
        echo "Installing $package_name from chaotic-aur ..."
        sudo pacman -S --noconfirm "chaotic-aur/$package_name"
      else
        echo "Installing $package_name ..."
        sudo pacman -S --noconfirm "$package_name"
      fi
    fi
  fi
done

# Define the file path to the chezmoi configuration file
chezmoi_config="$HOME/.config/chezmoi/chezmoi.toml"

# Define the git settings to be added
chezmoi_git_settings='
[git]
    autoCommit = true
    autoPush = true
    commitMessageTemplate = "Update"
'

# Check if the git settings already exist in the chezmoi configuration file
if ! grep -q '\[git\]' "$chezmoi_config"; then
  # If the settings do not exist, append them to the configuration file
  printf "%s\n" "$chezmoi_git_settings" >> "$chezmoi_config"

  echo "Git settings added to $chezmoi_config."
else
  echo "Git settings already exist in $chezmoi_config."
fi
